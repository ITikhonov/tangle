		Input

	Weave reads file named by first command-line argument and
	produces html file named by second one.

=open-file
-from sys import argv
-code=open(argv[1]).readlines()

=save-file
-of=open(argv[2],'w')
-of.write(''.join(output))
-of.close()

		Parsing

	Normal text starts with single tab, paragraphs are separated
	by an empty line.

	Heading starts with two tabs.

	Code starts with '-' or '>'.

	Code block name starts with '='.

=process
-def linetype(l):
-	if l.strip()=='': return '';
-	if l.startswith('\t\t'): return 'h'
-	if l.startswith('\t'): return 't'
-	if l.startswith(('-','>')): return 'c'
-	if l.startswith('='): return l
-	return 'u'

-all=[]
-ctype=''
-current=[]
-while len(code):
-	l=code.pop(0)
-	ntype=linetype(l)
-	if ctype!=ntype:
-		all.append((ctype,current))
-		current=[]
-		ctype=ntype
-	current.append(l)

		Code comments

	Include text (and empty lines) between code into code block.

	if between this code and previous code only text and empty lines,
	squash them all into one code.

	if between code and name is empty lines only, open code block by
	default.

=comments
-i=1
-while i<len(all):
-	if all[i][0]=='c':
-		for k in range(i-1,0,-1):
-			if all[k][0].startswith('c'):
-				for _,x in all[k+1:i+1]:
-					all[k][1].extend(x)
-				del all[k+1:i+1]
-				i=k
-				break
-			elif all[k][0].startswith('='):
-				if i-k==2 and all[i-1][0]=='':
-					all[i]=('co',all[i][1])
-					break
-	
-				for _,x in reversed(all[k+1:i]):
-					all[i][1][0:0]=x
-				del all[k+1:i]
-				i=k+1
-				break
-			elif all[k][0] not in ('t',''):
-				break
-	i+=1

		Generating HTML

=generate
-from cgi import escape

-output=[]

-for (t,l) in all:
-	if t=='':
-		pass
-	elif t=='h':
-		output.append('<h2>')
-		output.extend(l)
-		output.append('</h2>')
-	elif t=='t':
-		output.append('<p>')
-		output.extend(l)
-		output.append('</p>')
-	elif t=='c':
-		output.append('<div class="code closed" onclick="togglecode(this)"><pre onclick="ignore(arguments);">')
-		output.extend([escape(x) for x in l])
-		output.append('</pre></div>')
-	elif t=='co':
-		output.append('<div class="code open" onclick="togglecode(this)"><pre onclick="ignore(arguments);">')
-		output.extend([escape(x) for x in l])
-		output.append('</pre></div>')
-	elif t.startswith('=>'):
-		output.append('<div><a href="'+t[2:]+'"><code>')
-		output.extend(t[2:])
-		output.append('</code></a></div>')
-	elif t.startswith('='):
-		output.append('<div><code>')
-		output.append(t[1:])
-		output.append('</code></div>')
-	else:
-		output.append('<div style="color:red">')
-		output.extend(l)
-		output.append('</div>')

		Styling

	Some css to make it look better.

=css
-body{padding:6em;font:80% Verdana,sans-serif;width:35em}
-div.code{border-left:1px dotted black;padding-left:1em;cursor:pointer}
-div.code pre{cursor:auto}
-div.closed pre{display:none;cursor:auto}
-div.closed:before { content: "..." }

		Javascript

	By default code is hidden, open it by clicking on placeholder.

=js
-function togglecode(e) {
-	e.className=e.className=='code open'?'code closed':'code open';
-}

-function ignore(a) {
-	var e=a[0]||window.event;
-	e.cancelBubble=true;
-	e.stopPropagation();
-}



		HTML boilerplate

=html
-output.insert(0,"""<html><head>"""
-+"""<style>
>	css
-</style>"""
-+"""<script>
>	js
-</script>"""
-+"""</head><body>""")
-output.append("""</body></html>""")

		Whole code

=>weave.py
>open-file
>process
>comments
>generate
>html

>save-file

